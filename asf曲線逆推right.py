import numpy as np
from scipy.optimize import curve_fit


right_data = [
     [2,  2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,      2,        2,        2,        2,        2,   2,        2,      ],
     [2,  2.000454, 2.001814, 2.004081, 2.007256, 2.011338, 2.016327, 2.022222, 2.029025, 2.036735, 2.045352, 2.054875, 2.065306, 2.076644, 2.088889, 2.102041, 2.1161, 2.131066, 2.146939, 2.163719, 2.181406, 2.2, 2.219501, 2.239909],
     [2,  2.000907, 2.003628, 2.008163, 2.014512, 2.022676, 2.032653, 2.044444, 2.05805, 2.073469, 2.090703, 2.109751, 2.130612, 2.153288, 2.177778, 2.204082, 2.2322, 2.262132, 2.293878, 2.327438, 2.362812, 2.4, 2.439003, 2.479818],
     [2,  2.001361, 2.005442, 2.012245, 2.021769, 2.034014, 2.04898, 2.066667, 2.087075, 2.110204, 2.136054, 2.164626, 2.195919, 2.229932, 2.266666, 2.306122, 2.3483, 2.393197, 2.440816, 2.491156, 2.544217, 2.6, 2.658504, 2.719728],
     [2,  2.001814, 2.007256, 2.016326, 2.029025, 2.045351, 2.065306, 2.088889, 2.1161, 2.146938, 2.181406, 2.219501, 2.261225, 2.306576, 2.355555, 2.408163, 2.464399, 2.524263, 2.587755, 2.654875, 2.725623, 2.8, 2.878005, 2.959637],
     [2,  2.002268, 2.00907, 2.020408, 2.036281, 2.056689, 2.081633, 2.111111, 2.145125, 2.183673, 2.226757, 2.274376, 2.326531, 2.38322, 2.444444, 2.510204, 2.580499, 2.655329, 2.734694, 2.818594, 2.907029, 3, 3.097506, 3.199546],
     [2,  2.002722, 2.010884, 2.02449, 2.043537, 2.068027, 2.09796, 2.133333, 2.17415, 2.220407, 2.272108, 2.329251, 2.391837, 2.459864, 2.533333, 2.612245, 2.696599, 2.786395, 2.881633, 2.982313, 3.088435, 3.2, 3.317007, 3.439455],
     [2,  2.003175, 2.012698, 2.028571, 2.050793, 2.079365, 2.114286, 2.155555, 2.203175, 2.257142, 2.31746, 2.384126, 2.457143, 2.536508, 2.622222, 2.714286, 2.812699, 2.917461, 3.028572, 3.146032, 3.26984, 3.4, 3.536509, 3.679364],
     [2,  2.003629, 2.014512, 2.032653, 2.05805, 2.090702, 2.130613, 2.177778, 2.2322, 2.293877, 2.362811, 2.439002, 2.522449, 2.613152, 2.71111, 2.816326, 2.928798, 3.048526, 3.17551, 3.30975, 3.451246, 3.6, 3.75601, 3.919274],
     [2,  2.004082, 2.016326, 2.036734, 2.065306, 2.10204, 2.14694, 2.2, 2.261225, 2.330611, 2.408163, 2.493877, 2.587756, 2.689796, 2.799999, 2.918367, 3.044898, 3.179592, 3.322449, 3.473469, 3.632652, 3.8, 3.975511, 4.159183],
     [2,  2.004536, 2.01814, 2.040816, 2.072562, 2.113378, 2.163266, 2.222222, 2.29025, 2.367346, 2.453514, 2.548752, 2.653062, 2.76644, 2.888888, 3.020408, 3.160998, 3.310658, 3.469388, 3.637188, 3.814058, 4, 4.195012, 4.399092],
     [2,  2.00499, 2.019954, 2.044898, 2.079818, 2.124716, 2.179593, 2.244444, 2.319275, 2.404081, 2.498865, 2.603627, 2.718368, 2.843084, 2.977777, 3.122449, 3.277098, 3.441724, 3.616327, 3.800907, 3.995464, 4.2, 4.414513, 4.639001],
     [2,  2.005443, 2.021768, 2.048979, 2.087075, 2.136054, 2.195919, 2.266666, 2.3483, 2.440815, 2.544217, 2.658502, 2.783674, 2.919728, 3.066666, 3.22449, 3.393198, 3.57279, 3.763266, 3.964626, 4.176869, 4.4, 4.634015, 4.878911],
     [2,  2.005897, 2.023582, 2.053061, 2.094331, 2.147391, 2.212246, 2.288889, 2.377325, 2.47755, 2.589568, 2.713378, 2.848981, 2.996372, 3.155554, 3.32653, 3.509297, 3.703855, 3.910204, 4.128345, 4.358275, 4.6, 4.853516, 5.11882],
     [2,  2.006351, 2.025396, 2.057142, 2.101587, 2.158729, 2.228572, 2.311111, 2.40635, 2.514284, 2.63492, 2.768253, 2.914287, 3.073016, 3.244443, 3.428571, 3.625397, 3.834921, 4.057143, 4.292063, 4.539681, 4.8, 5.073017, 5.358729],
     [2,  2.006804, 2.02721, 2.061224, 2.108843, 2.170067, 2.244899, 2.333333, 2.435375, 2.551019, 2.680271, 2.823128, 2.979593, 3.14966, 3.333332, 3.530612, 3.741497, 3.965987, 4.204082, 4.455782, 4.721087, 5, 5.292518, 5.598638]
]
right_data = np.array(right_data) - 2
x = np.linspace(0, 1, len(right_data[0]))
# print(len(right_data[2]))

def func(x, a):
    return (x**2) * (a * 3.598638)

sum = 0
for i, y in enumerate(right_data):
     params, covariance = curve_fit(func, x, y)
     # print(params[0])
     # print(np.abs(func(x, i/15) - y).mean())
     sum+=np.abs(func(x, i/15) - y).mean()
print(sum/len(right_data))