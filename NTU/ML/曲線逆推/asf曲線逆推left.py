import numpy as np
from scipy.optimize import curve_fit

left_data = [
    [2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,        2,      2],
    [2.082944, 2.071322, 2.060966, 2.051782, 2.043676, 2.036561, 2.030353, 2.024972, 2.020339, 2.016384, 2.013035, 2.010228, 2.007901, 2.005996, 2.004458, 2.003236, 2.002285, 2.001561, 2.001024, 2.000639, 2.000375, 2.000202, 2.000098, 2.00004, 2],
    [2.165888, 2.142644, 2.121933, 2.103563, 2.087352, 2.073123, 2.060707, 2.049944, 2.040679, 2.032768, 2.026071, 2.020457, 2.015802, 2.011992, 2.008915, 2.006473, 2.00457, 2.003122, 2.002048, 2.001278, 2.00075, 2.000404, 2.000195, 2.00008, 2],
    [2.248832, 2.213966, 2.182899, 2.155345, 2.131027, 2.109684, 2.09106, 2.074915, 2.061019, 2.049152, 2.039106, 2.030685, 2.023704, 2.017987, 2.013373, 2.009709, 2.006855, 2.004682, 2.003072, 2.001918, 2.001124, 2.000607, 2.000293, 2.00012, 2],
    [2.331776, 2.285288, 2.243865, 2.207126, 2.174703, 2.146245, 2.121414, 2.099887, 2.081358, 2.065536, 2.052142, 2.040914, 2.031605, 2.023983, 2.01783, 2.012946, 2.00914, 2.006243, 2.004096, 2.002557, 2.001499, 2.000809, 2.00039, 2.00016, 2],
    [2.41472, 2.35661, 2.304832, 2.258908, 2.218379, 2.182806, 2.151767, 2.124859, 2.101698, 2.08192, 2.065177, 2.051142, 2.039506, 2.029979, 2.022288, 2.016182, 2.011425, 2.007804, 2.00512, 2.003196, 2.001874, 2.001011, 2.000488, 2.0002, 2],
    [2.497664, 2.427932, 2.365798, 2.31069, 2.262055, 2.219367, 2.18212, 2.149831, 2.122038, 2.098304, 2.078212, 2.06137, 2.047407, 2.035975, 2.026746, 2.019418, 2.01371, 2.009365, 2.006144, 2.003835, 2.002249, 2.001213, 2.000586, 2.00024, 2],
    [2.580608, 2.499254, 2.426765, 2.362471, 2.305731, 2.255929, 2.212474, 2.174803, 2.142377, 2.114688, 2.091248, 2.071599, 2.055308, 2.04197, 2.031203, 2.022655, 2.015995, 2.010926, 2.007168, 2.004474, 2.002624, 2.001415, 2.000683, 2.00028, 2],
    [2.663552, 2.570576, 2.487731, 2.414253, 2.349406, 2.29249, 2.242827, 2.199775, 2.162717, 2.131072, 2.104283, 2.081827, 2.06321, 2.047966, 2.035661, 2.025891, 2.01828, 2.012486, 2.008192, 2.005114, 2.002998, 2.001618, 2.000781, 2.00032, 2],
    [2.746496, 2.641898, 2.548698, 2.466034, 2.393082, 2.329051, 2.27318, 2.224746, 2.183056, 2.147456, 2.117319, 2.092056, 2.071111, 2.053962, 2.040118, 2.029128, 2.020565, 2.014047, 2.009216, 2.005753, 2.003373, 2.00182, 2.000878, 2.00036, 2],
    [2.82944, 2.71322, 2.609664, 2.517816, 2.436758, 2.365612, 2.303534, 2.249718, 2.203396, 2.16384, 2.130354, 2.102284, 2.079012, 2.059958, 2.044576, 2.032364, 2.02285, 2.015608, 2.01024, 2.006392, 2.003748, 2.002022, 2.000976, 2.0004, 2],
    [2.912384, 2.784542, 2.67063, 2.569598, 2.480434, 2.402173, 2.333887, 2.27469, 2.223736, 2.180224, 2.143389, 2.112512, 2.086913, 2.065954, 2.049034, 2.0356, 2.025135, 2.017169, 2.011264, 2.007031, 2.004123, 2.002224, 2.001074, 2.00044, 2],
    [2.995328, 2.855864, 2.731597, 2.621379, 2.52411, 2.438734, 2.364241, 2.299662, 2.244075, 2.196608, 2.156425, 2.122741, 2.094814, 2.071949, 2.053491, 2.038837, 2.02742, 2.01873, 2.012288, 2.00767, 2.004498, 2.002426, 2.001171, 2.00048, 2],
    [3.078272, 2.927186, 2.792563, 2.673161, 2.567786, 2.475296, 2.394594, 2.324633, 2.264415, 2.212992, 2.16946, 2.132969, 2.102715, 2.077945, 2.057949, 2.042073, 2.029705, 2.02029, 2.013312, 2.00831, 2.004872, 2.002629, 2.001269, 2.00052, 2],
    [3.161216, 2.998508, 2.85353, 2.724942, 2.611461, 2.511857, 2.424948, 2.349605, 2.284755, 2.229376, 2.182496, 2.143198, 2.110617, 2.083941, 2.062406, 2.04531, 2.03199, 2.021851, 2.014336, 2.008949, 2.005247, 2.002831, 2.001366, 2.00056, 2],
    [3.24416, 3.06983, 2.914496, 2.776724, 2.655137, 2.548418, 2.455301, 2.374577, 2.305094, 2.24576, 2.195531, 2.153426, 2.118518, 2.089937, 2.066864, 2.048546, 2.034275, 2.023412, 2.01536, 2.009588, 2.005622, 2.003033, 2.001464, 2.0006, 2]
]
left_data = np.array(left_data) - 2
x = np.linspace(1, 0, len(left_data[0]))
# print(len(left_data[2]))
# def func(x, a):
#     return (x**3.463) * a 

def func(x, a):
    return (x**3.4470155) * (a*1.24416)

sum = 0
for i, y in enumerate(left_data):
     params, covariance = curve_fit(func, x, y)
     # print(params)
     # print(np.abs(func(x, params[0], params[1]) - y).sum())
    #  print(np.abs(func(x, i/15) - y).mean())
     sum+=np.abs(func(x, i/15) - y).mean()
print(sum/len(left_data))
# print(0.08247972 * 15)